unit U_Param;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Themes, Vcl.Styles, U_DataModule1, U_RDV,
  Vcl.ComCtrls, Vcl.ExtCtrls, Vcl.WinXCtrls;

type
  TF_Param = class(TForm)
    GroupBox1: TGroupBox;
    ComboBox1: TComboBox;
    Panel1: TPanel;
    ToggleSwitch1: TToggleSwitch;
    ToggleSwitch2: TToggleSwitch;
    ToggleSwitch3: TToggleSwitch;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    procedure FormCreate(Sender: TObject);
    procedure ComboBox1Change(Sender: TObject);
    procedure ToggleSwitch1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  F_Param: TF_Param;
    var Styles, Style :String;
implementation

{$R *.dfm}


procedure TF_Param.ComboBox1Change(Sender: TObject);
begin
//Selectioner Le Style est savgarder le dans la base de donneé
  With DataModule1 do
    begin
    for Styles in TStyleManager.StyleNames do
        Begin
          if (ComboBox1.Text = Styles) then
            Begin
              TStyleManager.SetStyle(Styles);
              FDQuery2.Edit;
              FDQuery2.FieldByName('Theme').AsString:=Styles;
              FDQuery2.Post;
            End;
        End;
    end;
end;

procedure TF_Param.FormCreate(Sender: TObject);
begin
//Bouclé sur tous les Style disponsible
  ComboBox1.Clear;
  for Styles in TStyleManager.StyleNames do
    ComboBox1.Items.Add(Styles);
//lire le data de base de doneé
  Style:=DataModule1.FDQuery2.Fields[0].AsString;
//définir le Style
  TStyleManager.SetStyle(Style);
end;

procedure TF_Param.ToggleSwitch1Click(Sender: TObject);
begin
  if (ToggleSwitch1.State = tssOff) then
      F_RDV.Panel3.Visible:=False
  else
      F_RDV.Panel3.Visible:=True;


end;

end.
